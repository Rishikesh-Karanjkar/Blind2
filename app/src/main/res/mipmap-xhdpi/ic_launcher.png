/*
 * Copyright 2019 The TensorFlow Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.tensorflow.lite.examples.Poshan.Activity;

import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.RectF;
import android.graphics.Typeface;
import android.media.ImageReader.OnImageAvailableListener;
import android.os.SystemClock;
import android.util.Size;
import android.util.TypedValue;
import android.widget.Toast;

import java.io.IOException;
import java.util.LinkedList;
import java.util.List;

import org.tensorflow.lite.examples.Poshan.Nutrition.PoshanCache;
import org.tensorflow.lite.examples.Poshan.Nutrition.NutritionInfo;
import org.tensorflow.lite.examples.Poshan.Nutrition.NutritiontoReport;
import org.tensorflow.lite.examples.Poshan.R;
import org.tensorflow.lite.examples.Poshan.customview.OverlayView;
import org.tensorflow.lite.examples.Poshan.customview.OverlayView.DrawCallback;
import org.tensorflow.lite.examples.Poshan.dbutil.FoodReferenceDB;
import org.tensorflow.lite.examples.Poshan.dbutil.NutritionAuditDB;
import org.tensorflow.lite.examples.Poshan.env.BorderedText;
import org.tensorflow.lite.examples.Poshan.env.ImageUtils;
import org.tensorflow.lite.examples.Poshan.env.Logger;
import org.tensorflow.lite.examples.Poshan.tflite.Classifier;
import org.tensorflow.lite.examples.Poshan.tflite.TFLiteObjectDetectionAPIModel;
import org.tensorflow.lite.examples.Poshan.tracking.MultiBoxTracker;
import org.tensorflow.lite.examples.Poshan.util.FoodReferenceDto;

/**
 * An activity that uses a TensorFlowMultiBoxDetector and ObjectTracker to detect and then track
 * objects.
 */
public class DetectorActivity extends CameraActivity implements OnImageAvailableListener {
  private static final Logger LOGGER = new Logger();

  // Configuration values for the prepackaged SSD model.
  private static final int TF_OD_API_INPUT_SIZE = 300;
  private static final boolean TF_OD_API_IS_QUANTIZED = true;
  private static final String TF_OD_API_MODEL_FILE = "detect.tflite";
  private static final String TF_OD_API_LABELS_FILE = "file:///android_asset/labelmap.txt";
  private static final DetectorMode MODE = DetectorMode.TF_OD_API;
  // Minimum com.Poshan confidence to track a com.Poshan.
  private static final float MINIMUM_CONFIDENCE_TF_OD_API = 0.8f;
  private static final boolean MAINTAIN_ASPECT = false;
  private static final Size DESIRED_PREVIEW_SIZE = new Size(640, 480);
  private static final boolean SAVE_PREVIEW_BITMAP = false;
  private static final float TEXT_SIZE_DIP = 10;
  OverlayView trackingOverlay;
  private Integer sensorOrientation;

  private NutritionAuditDB nrdb;
  private FoodReferenceDB frDb;


  private Classifier detector;

  private long lastProcessingTimeMs;
  private Bitmap rgbFrameBitmap = null;
  private Bitmap croppedBitmap = null;
  private Bitmap cropCopyBitmap = null;

  private boolean computingDetection = false;

  private long timestamp = 0;

  private Matrix frameToCropTransform;
  private Matrix cropToFrameTransform;

  private MultiBoxTracker tracker;

  private BorderedText borderedText;

  private NutritionInfo nInfo;

  @Override
  public void onPreviewSizeChosen(final Size size, final int rotation) {
    final float textSizePx =
        TypedValue.applyDimension(
            TypedValue.COMPLEX_UNIT_DIP, TEXT_SIZE_DIP, getResources().getDisplayMetrics());
    borderedText = new BorderedText(textSizePx);
    borderedText.setTypeface(Typeface.MONOSPACE);

    tracker = new MultiBoxTracker(this);

    int cropSize = TF_OD_API_INPUT_SIZE;

    try {
      detector =
          TFLiteObjectDetectionAPIModel.create(